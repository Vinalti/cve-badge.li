from fastapi.testclient import TestClient

from .main import app

client = TestClient(app)


# TEST INVALID REQUESTS
def test_404_page():
    response = client.get("/404")
    assert response.status_code == 404
    assert response.json() == {
        "detail": "Not Found"
    }


def test_unknown_cve():
    response = client.get("/CVE-2010-9999")
    assert response.status_code == 200
    assert ">?</text" in response.text
    assert "MEDIUM" not in response.text
    assert "LOW" not in response.text
    assert "HIGH" not in response.text
    assert "CRITICAL" not in response.text


# TEST VALID REQUESTS
def test_valid_cve_LOW38_CVSS_3_1():
    response = client.get("/CVE-2022-2106")
    assert response.status_code == 200
    assert "LOW" in response.text
    assert "3.8" in response.text


def test_valid_cve_MEDIUM53_CVSS_3_1():
    response = client.get("/CVE-2022-2117")
    assert response.status_code == 200
    assert "MEDIUM" in response.text
    assert "5.3" in response.text


def test_valid_cve_MEDIUM68_CVSS_3_1():
    response = client.get("/CVE-2023-0795")
    assert response.status_code == 200
    assert "MEDIUM" in response.text
    assert "6.8" in response.text


def test_valid_cve_CRITICAL98_CVSS_3_1():
    response = client.get("/CVE-2023-0750")
    assert response.status_code == 200
    assert "CRITICAL" in response.text
    assert "9.8" in response.text


def test_valid_cve_LOW35_CVSS_3_1_and_less():
    '''This test include metrics for cvss 3.1, 3.0 and 2.0.'''
    response = client.get("/CVE-2023-0732")
    assert response.status_code == 200
    assert "LOW" in response.text
    assert "3.2" in response.text